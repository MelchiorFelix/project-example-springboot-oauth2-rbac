spring:
  profiles.active: develop

# Environment - Development
---
spring:
  profiles: develop
  application:
    name: project-example-oauth2
        
  datasource:
    name: db-dev
    url: jdbc:postgresql://localhost:5432/db_project_oauth2
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
    platform: 
    hikari:
        connection-timeout: 20000
        maximum-pool-size: 5
  jpa:
    properties:
      hibernate:
        show_sql: true
        use_sql_comments: false
        format_sql: true
        ddl-auto: none 
        temp.use_jdbc_metadata_defaults: false
        database-platform: org.hibernate.dialect.PostgreSQL9Dialect
    generate-ddl: true
    
management:
  endpoint:
    health:
      show-details: always
  endpoints:
    web:
      exposure:
        include: "*"

jwt:
  clientId: ProjectExampleOAuth2Security
  client-secret: secretProjectExampleOAuth2Security
  accessTokenValidititySeconds: 43200
  authorizedGrantTypes: password,refresh_token
  refreshTokenValiditySeconds: 2592000

server:
  address: localhost
  port: 8080
  servlet:
    context-path: /api






# Environment - Container - Docker - docker-compose
---
spring:
  profiles: container
  application:
    name: project-example-oauth2
        
  datasource:
    name: db-dev
    url: jdbc:postgresql://db:5432/db_project_oauth2
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
    platform: 
    hikari:
        connection-timeout: 20000
        maximum-pool-size: 5
  jpa:
    properties:
      hibernate:
        show_sql: true
        use_sql_comments: false
        format_sql: true
        ddl-auto: update 
        temp.use_jdbc_metadata_defaults: false
        database-platform: org.hibernate.dialect.PostgreSQL9Dialect
    generate-ddl: true
    
management:
  endpoint:
    health:
      show-details: always
  endpoints:
    web:
      exposure:
        include: "*"

jwt:
  clientId: ProjectExampleOAuth2Security
  client-secret: secretProjectExampleOAuth2Security
  accessTokenValidititySeconds: 43200
  authorizedGrantTypes: password,refresh_token
  refreshTokenValiditySeconds: 2592000

server:
  address: springbootapp
  port: 8080
  servlet:
    context-path: /api




